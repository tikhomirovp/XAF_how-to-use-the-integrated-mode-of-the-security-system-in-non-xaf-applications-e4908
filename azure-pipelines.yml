trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'NonXAFSecurityExamples.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: DownloadSecureFile@1
  name: nugetConf
  inputs:
    secureFile: 'nuget.config'

- task: CmdLine@2
  inputs:
    script: |
      echo $(nugetConf.secureFilePath)
      xcopy $(nugetConf.secureFilePath)

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'
    feedsToUse: 'config'
    nugetConfigPath: '$(nugetConf.secureFilePath)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      param(
      [string]$easyTestPath=".\EasyTests", 
      [string]$easyTestBinPath=".\EasyTestBin",
      [string]$WinBinPath="XafSolution\XafSolution.Win\bin\Release",
      ) 
      
      sqllocaldb start MSSQLLocalDB
      
      Copy-Item -Path $easyTestBinPath\*.dll -Destination $WinBinPath -exclude DevExpress.ExpressApp.EasyTest.WebAdapter*
      
      $testExecutorItem = Get-ChildItem -Path $easyTestBinPath -Include TestExecutor.v*.exe -File -Recurse
      $testExecutorPath = $easyTestBinPath + "\" + $testExecutorItem[0].Name
      
      & $testExecutorPath $easyTestPath
      
      $easyTestLogPath = $easyTestPath + "\TestsLog.xml"
      if(Select-String -Pattern 'Result="Failed"', 'Result="Warning"' -Path $easyTestLogPath) { exit 1 }

- task: PublishPipelineArtifact@1
  condition: succeededOrFailed()
  inputs:
    targetPath: '.\EasyTests\'
    artifact: 'TestsResultFiles'
    publishLocation: 'pipeline'